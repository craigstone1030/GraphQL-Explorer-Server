# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Cook {
  name: String!
  yearsOfExperience: Int!
}

"""All possible preparation difficulty levels"""
enum Difficulty {
  Beginner
  Easy
  Hard
  MasterChef
  Medium
}

interface IUser {
  age: Float!
  isFool: Boolean!
  job: String!
  name: String!
  uid: ID!
}

type Mutation {
  CreateUser(newUserInfo: UserInputOrArgs!): User!
  DeleteUser(uid: Float!): Status
  NotLongerFull(uid: Float!): Status
  UpdateUser(modifiedUserInfo: UserInputOrArgs!): Status
}

type Query {
  FindUserById(uid: Float!): User!
  Recipes(difficulty: Difficulty): [Recipe!]!
  Search(cookName: String!): [SearchResult!]!
  Users: [User!]!
}

type Recipe {
  cook: Cook!
  description: String
  ingredients: [String!]!
  preparationDifficulty: Difficulty!
  title: String!
}

union SearchResult = Cook | Recipe

type Status {
  message: String!
  success: Boolean!
}

type User implements IUser {
  age: Float!
  isFool: Boolean!
  job: String!
  name: String!
  uid: ID!
}

""" User InputObject/Args"""
input UserInputOrArgs {
  age: Int
  isFool: Boolean
  name: String!
}
